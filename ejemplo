<?php

// Clase que representa un nodo de la lista enlazada
class nodo {

   public $dato;         // Valor que almacena el nodo
   public $siguiente;    // Puntero al siguiente nodo (puede ser null)

   // Constructor que inicializa el nodo con un dato
   public function __construct($dato) {
     $this->dato = $dato;        // Asigna el valor recibido
     $this->siguiente = null;    // Inicialmente no apunta a ningún otro nodo
   }
}

// Clase que representa la lista enlazada
class listaenlazada {

  public $cabeza;   // Puntero al primer nodo de la lista (la "cabeza")

  // Constructor que inicializa la lista vacía
  public function __construct() {
    $this->cabeza = null;  // Al principio no hay nodos
  }

  // Método para insertar un nuevo dato al inicio de la lista
  public function insertar($dato) {
    $nuevonodo = new nodo($dato);         // Crea un nuevo nodo con el dato
    $nuevonodo->siguiente = $this->cabeza; // El nuevo nodo apunta al nodo que era la cabeza
    $this->cabeza = $nuevonodo;            // Ahora el nuevo nodo es la cabeza de la lista
  }

  // Método para imprimir la lista como una lista HTML <ul>
  public function imprimirHTML() {
    $actual = $this->cabeza;     // Comenzamos desde la cabeza de la lista
    echo "<ul>";                 // Abrimos una lista HTML
    while ($actual != null) {    // Mientras haya nodos por recorrer
      echo "<li>" . $actual->dato . "</li>";  // Imprimimos el dato del nodo
      $actual = $actual->siguiente;           // Avanzamos al siguiente nodo
    }
    echo "</ul>";                // Cerramos la lista HTML
  }

  // Método para buscar un dato en la lista
  public function buscar($dato) {
    $actual = $this->cabeza;     // Comenzamos desde la cabeza
    while ($actual != null) {    // Recorremos todos los nodos
      if ($actual->dato == $dato) {  // Si el dato coincide
        return true;                 // Lo encontramos
      }
      $actual = $actual->siguiente;  // Seguimos buscando
    }
    return false;  // Si llegamos al final sin encontrarlo, devolvemos false
  }
}

// Crear una nueva lista enlazada
$lista = new listaenlazada();

// Insertar algunos elementos en la lista
$lista->insertar("Tigre");     // Este será el último (se inserta primero)
$lista->insertar("Elefante");  // Se inserta antes de "Tigre"
$lista->insertar("Jirafa");    // Se inserta antes de "Elefante"

// La lista ahora es: Jirafa -> Elefante -> Tigre

// Imprimir la lista como HTML
$lista->imprimirHTML();


?>


